# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-01-02 10:19
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='邮件地址')),
                ('name', models.CharField(max_length=32, verbose_name='姓名')),
                ('is_active', models.BooleanField(default=True, verbose_name='激活')),
                ('is_staff', models.BooleanField(default=True, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户列表',
                'verbose_name_plural': '用户管理',
                'permissions': (('crm_table_index', '可以查看所有的项目'), ('crm_table_list', '可以查看每张表里所有的数据'), ('crm_table_list_view', '可以访问表里每条数据的修改页'), ('crm_table_list_change', '可以对表里的每条数据进行修改')),
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmd', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(blank=True, max_length=64, unique=True, verbose_name='主机名')),
                ('ip_address', models.GenericIPAddressField(unique=True, verbose_name='IP地址')),
                ('username', models.CharField(max_length=64, unique=True, verbose_name='系统用户')),
                ('host_key', models.CharField(blank=True, max_length=255, null=True, verbose_name='系统秘钥')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='系统密码')),
                ('port', models.IntegerField(default=22, verbose_name='SSH端口')),
                ('date', models.DateField(auto_now_add=True)),
                ('host_active', models.CharField(blank=True, max_length=8, null=True, verbose_name='连接')),
            ],
            options={
                'verbose_name': '主机信息表',
                'verbose_name_plural': '主机信息表',
            },
        ),
        migrations.CreateModel(
            name='HostGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=64, unique=True, verbose_name='主机组')),
                ('host_count', models.IntegerField(blank=True, null=True, verbose_name='主机数量')),
                ('remark', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '主机组',
                'verbose_name_plural': '主机组',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='机房名字')),
                ('address', models.CharField(blank=True, max_length=128, unique=True, verbose_name='机房地址')),
            ],
            options={
                'verbose_name': '机房信息',
                'verbose_name_plural': '机房信息',
            },
        ),
        migrations.CreateModel(
            name='Master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=32, null=True, verbose_name='状态')),
                ('roles', models.SmallIntegerField(choices=[(0, 'master'), (1, 'node')], unique=True, verbose_name='角色')),
                ('version', models.CharField(max_length=32, verbose_name='版本')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host_monitor.Host', to_field='ip_address', verbose_name='主机')),
            ],
            options={
                'verbose_name': '集群信息表',
                'verbose_name_plural': '集群信息表',
            },
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_use', models.CharField(max_length=12)),
                ('cpu_total', models.CharField(max_length=12)),
                ('ram_use', models.CharField(max_length=12)),
                ('ram_total', models.CharField(max_length=12)),
                ('disk_use', models.CharField(max_length=12)),
                ('disk_total', models.CharField(max_length=12)),
                ('host_input', models.CharField(max_length=12)),
                ('host_output', models.CharField(max_length=12)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('hostname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host_monitor.Host', verbose_name='主机')),
            ],
            options={
                'verbose_name': '主机监控',
                'verbose_name_plural': '主机监控',
            },
        ),
        migrations.CreateModel(
            name='NameSpaces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, unique=True, verbose_name='项目名称')),
            ],
            options={
                'verbose_name': '命名空间',
                'verbose_name_plural': '命名空间',
            },
        ),
        migrations.CreateModel(
            name='Pod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Pod名字')),
                ('pod_ip', models.GenericIPAddressField(unique=True, verbose_name='PodIP')),
                ('gateway', models.GenericIPAddressField(verbose_name='网关')),
                ('hostport', models.IntegerField(verbose_name='对外端口号')),
                ('image', models.CharField(blank=True, max_length=128, unique=True, verbose_name='原生镜像')),
                ('image_id', models.CharField(blank=True, max_length=128, unique=True, verbose_name='镜像名')),
                ('pod_status', models.CharField(blank=True, max_length=128, unique=True, verbose_name='状态')),
                ('ports', models.CharField(blank=True, max_length=128, unique=True, verbose_name='端口')),
                ('start_data', models.DateTimeField(auto_now_add=True, verbose_name='启动时间')),
                ('container_id', models.CharField(max_length=256, verbose_name='ID')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host_monitor.Host')),
                ('namespaces', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host_monitor.NameSpaces')),
            ],
            options={
                'verbose_name': '节点信息表',
                'verbose_name_plural': '节点信息表',
            },
        ),
        migrations.CreateModel(
            name='SystemUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64, verbose_name='系统用户')),
                ('auth_type', models.SmallIntegerField(choices=[(0, 'ssh-password'), (1, 'ssh-key')], default=0)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'verbose_name': '系统用户',
                'verbose_name_plural': '系统用户',
            },
        ),
        migrations.AlterUniqueTogether(
            name='systemuser',
            unique_together=set([('username', 'password')]),
        ),
        migrations.AddField(
            model_name='master',
            name='namespaces',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host_monitor.NameSpaces'),
        ),
        migrations.AddField(
            model_name='host',
            name='host_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='host_monitor.HostGroup', to_field='group_name', verbose_name='主机组'),
        ),
        migrations.AddField(
            model_name='host',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host_monitor.IDC', verbose_name='机房'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host_monitor.IDC'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='image_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host_monitor.Pod'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='node',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host_monitor.Host'),
        ),
        migrations.AlterUniqueTogether(
            name='host',
            unique_together=set([('password', 'host_key')]),
        ),
    ]
